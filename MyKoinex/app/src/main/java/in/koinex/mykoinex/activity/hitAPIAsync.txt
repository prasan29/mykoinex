private void hitAPIAsync() {
	new AsyncTask<Void,Void,String>() {
		@Override
		protected String doInBackground(Void... params) {
			String result = "";
			Stats stats;
			iAPIInterface iapiInterface = APIUtil.getClient().create(iAPIInterface.class);
			Call<KoinexJSON> call = iapiInterface.getResponse();
			call.enqueue(new Callback<KoinexJSON>() {
				@Override
				public void onResponse(Call<KoinexJSON> call, Response<KoinexJSON> response) {
					if (response != null) {
						stats = response.body().getStats();
						result = "XRP : " + stats.getXRP().getLast_traded_price() + "\n" +
								"BTC : " + stats.getBTC().getLast_traded_price() + "\n" +
								"ETH : " + stats.getETH().getLast_traded_price() + "\n" +
								"LTC : " + stats.getLTC().getLast_traded_price() + "\n" +
								"BCH : " + stats.getBCH().getLast_traded_price();
					}
					else {
						contentText.setText("");
						Toast.makeText(HomeActivity.this, "Unexpected error!", Toast.LENGTH_SHORT).show();
					}
				}
			}
			return result;
		}
		@Override
        protected void onPostExecute(String result) {
			contentText.setText(result);
        }
	}.execute();
}
